#!/bin/bash
# file managed by puppet

FLAGS="/etc/puppet/dont-run /tmp/stop-puppet /tmp/no-puppet /tmp/np"
SERVER="<%= puppet_server %>"
BIN="/usr/sbin/puppetd"
ARGS="--onetime --no-daemonize --server $SERVER"
FACILITY="local1.warn"

<% if has_variable?("facter_envvars") and facter_envvars.is_a?(Array) then -%>
# see http://reductivelabs.com/trac/puppet/wiki/FrequentlyAskedQuestions#can-i-access-environmental-variables-with-facter
<% facter_envvars.each do |f| -%>
export FACTER_<%= f %>
<% end -%>
<% end -%>

if $(ping -q -c1 -w10 $SERVER &>/dev/null); then
  if $(tty > /dev/null); then
    $BIN $ARGS --test $@
  else
    for flag in $FLAGS; do
      if [ -e $flag ]; then
        logger -p $FACILITY -t $(basename $0) "Found file $flag, skipping puppet run."
        exit 1
      fi
    done

    random_sleep=$[$RANDOM % 600]
    logger -p $FACILITY -t $(basename $0) "Random sleep during $random_sleep seconds"
    sleep $random_sleep

    logger -p $FACILITY -t $(basename $0) "Update apt cache"
    apt-get -q2 update

    $BIN $ARGS --logdest syslog > /dev/null 2>&1
  fi
fi

exit 0
